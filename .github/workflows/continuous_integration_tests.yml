name: Continous Integration

on: 
  pull_request:
      branches: 
        - main
        - main-v2.0

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.11
      uses: actions/setup-python@v1
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --ignore F401,E501,W503 --count --show-source --statistics --max-line-length=127
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    - name: Django Test Migrations
      env:
        DB_ENGINE: postgres
        DB_POSTGRESQL_NAME: postgres
        DB_POSTGRESQL_USER: postgres
        DB_POSTGRESQL_PASSWORD: postgres
        DB_POSTGRESQL_HOST: localhost
        DB_POSTGRESQL_PORT: 5432
      run: |
        python3 manage.py makemigrations --dry-run --check --no-input # Test migrations
    - name: Django Testing project
      env:
        DB_ENGINE: postgres
        DB_POSTGRESQL_NAME: postgres
        DB_POSTGRESQL_USER: postgres
        DB_POSTGRESQL_PASSWORD: postgres
        DB_POSTGRESQL_HOST: localhost
        DB_POSTGRESQL_PORT: 5432
      run: |
        python3 manage.py test # Don't forget to run tests

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
