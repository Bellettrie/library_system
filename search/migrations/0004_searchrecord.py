# Generated by Django 5.1.4 on 2025-03-07 20:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('creators', '0002_initial'),
        ('members', '0004_rename_email_member_primary_email_and_more'),
        ('search', '0003_install_postgres_extensions'),
        ('series', '0001_initial'),
        ('works', '0002_rename_datetime_itemstate_date_time'),
    ]

    operations = [
        migrations.CreateModel(
            name='SearchRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication_title_text', models.TextField(default='')),
                ('publication_series_text', models.TextField(default='')),
                ('publication_sub_work_title_text', models.TextField(default='')),
                ('publication_creator_text', models.TextField(default='')),
                ('publication_sub_work_creator_text', models.TextField(default='')),
                ('member_text', models.TextField(default='')),
                ('member_is_current_member', models.BooleanField(blank=True, null=True)),
                ('creator_text', models.TextField(default='')),
                ('series_text', models.TextField(default='')),
                ('series_creator_text', models.TextField(default='')),
                ('result_priority', models.FloatField(default=1)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='creators.creator')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='works.item')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='members.member')),
                ('series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='series.series')),
            ],
        ),

        migrations.RunSQL("""
         alter table search_searchrecord
     add all_text_search_vector tsvector
         generated always as (
             setweight(to_tsvector('simple', coalesce(member_text, '')), 'A'):: tsvector || ' ' ||
             setweight(to_tsvector('simple', coalesce(creator_text, '')), 'A') :: tsvector  || ' ' ||
             setweight(to_tsvector('simple', coalesce(series_text, '')), 'A') :: tsvector  || ' ' ||
             setweight(to_tsvector('simple', coalesce(series_creator_text, '')), 'B') :: tsvector  || ' ' ||
             setweight(to_tsvector('simple', coalesce(publication_creator_text, '')), 'C') :: tsvector  || ' ' ||
             setweight(to_tsvector('simple', coalesce(publication_series_text, '')), 'C') :: tsvector  || ' ' ||
             setweight(to_tsvector('simple', coalesce(publication_title_text, '')), 'C') :: tsvector  || ' ' ||
             setweight(to_tsvector('simple', coalesce(publication_sub_work_title_text, '')), 'D') :: tsvector  || ' ' ||
             setweight(to_tsvector('simple', coalesce(publication_sub_work_creator_text, '')), 'D') :: tsvector
             ) stored;
         create index idx_all_text_search on search_searchrecord using GIN(all_text_search_vector)

         """)
    ]
