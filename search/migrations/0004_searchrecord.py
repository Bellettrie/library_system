# Generated by Django 5.1.4 on 2025-03-01 21:09

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('creators', '0002_initial'),
        ('members', '0004_rename_email_member_primary_email_and_more'),
        ('search', '0003_install_postgres_extensions'),
        ('series', '0001_initial'),
        ('works', '0002_rename_datetime_itemstate_date_time'),
    ]

    operations = [
        migrations.CreateModel(
            name='SearchRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_text', models.TextField()),
                ('member_text', models.TextField(default='')),
                ('title_text', models.TextField(default='')),
                ('sub_title_text', models.TextField(default='')),
                ('creator_text', models.TextField(default='')),
                ('series_titles_text', models.TextField(default='')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField()),
                ('result_priority', models.FloatField(default=1)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='creators.creator')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='members.member')),
                ('publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='works.publication')),
                ('series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='series.series')),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['title_text'], name='searchV_title', opclasses=['gin_trgm_ops']), django.contrib.postgres.indexes.GinIndex(fields=['all_text'], name='searchV_all', opclasses=['gin_trgm_ops']), django.contrib.postgres.indexes.GinIndex(fields=['member_text'], name='searchV_member', opclasses=['gin_trgm_ops']), django.contrib.postgres.indexes.GistIndex(fields=['all_text'], name='searchX_all', opclasses=['gist_trgm_ops']), django.contrib.postgres.indexes.GinIndex(fields=['sub_title_text'], name='searchV_subtitle', opclasses=['gin_trgm_ops']), django.contrib.postgres.indexes.GinIndex(fields=['creator_text'], name='searchV_creator', opclasses=['gin_trgm_ops']), django.contrib.postgres.indexes.GinIndex(fields=['series_titles_text'], name='searchV_series', opclasses=['gin_trgm_ops'])],
            },
        ),
    ]
